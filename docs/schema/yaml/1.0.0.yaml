# @section version One of [1.0.0]
version: '1.0.0'
# @section environment
environment:
  # @param environment.enabledFeatures
  enabledFeatures:
    # @param environment.enabledFeatures[]
    - ''
  # @param environment.autoDeploy
  autoDeploy: false
  # @param environment.githubDeployments
  githubDeployments: false
  # @param environment.useGithubStatusComment
  useGithubStatusComment: false
  # @param environment.defaultServices
  defaultServices:
    # @param environment.defaultServices[]
    -
      # @param environment.defaultServices.name (required)
      name: ''
      # @param environment.defaultServices.repository
      repository: ''
      # @param environment.defaultServices.branch
      branch: ''
      # @param environment.defaultServices.serviceId
      serviceId: 0
  # @param environment.optionalServices
  optionalServices:
    # @param environment.optionalServices[]
    -
      # @param environment.optionalServices.name (required)
      name: ''
      # @param environment.optionalServices.repository
      repository: ''
      # @param environment.optionalServices.branch
      branch: ''
      # @param environment.optionalServices.serviceId
      serviceId: 0
  # @param environment.webhooks
  webhooks:
    # @param environment.webhooks[]
    -
      # @param environment.webhooks.name
      name: ''
      # @param environment.webhooks.description
      description: ''
      # @param environment.webhooks.state (required)
      state: ''
      # @param environment.webhooks.type (required)
      type: ''
      # @param environment.webhooks.pipelineId
      pipelineId: ''
      # @param environment.webhooks.trigger (required)
      trigger: ''
      # @param environment.webhooks.env (required)
      env:

      # @param environment.webhooks.docker
      docker:
        # @param environment.webhooks.docker.image (required)
        image: ''
        # @param environment.webhooks.docker.command
        command:
          # @param environment.webhooks.docker.command[]
          - ''
        # @param environment.webhooks.docker.args
        args:
          # @param environment.webhooks.docker.args[]
          - ''
        # @param environment.webhooks.docker.timeout
        timeout: 0
      # @param environment.webhooks.command
      command:
        # @param environment.webhooks.command.image (required)
        image: ''
        # @param environment.webhooks.command.script (required)
        script: ''
        # @param environment.webhooks.command.timeout
        timeout: 0
# @section services
services:
  # @param services[]
  -
    # @param services.name (required)
    name: ''
    # @param services.appShort
    appShort: ''
    # @param services.defaultUUID
    defaultUUID: ''
    # @param services.requires
    requires:
      # @param services.requires[]
      -
        # @param services.requires.name (required)
        name: ''
    # @param services.helm
    helm:
      # @param services.helm.cfStepType
      cfStepType: ''
      # @param services.helm.type
      type: ''
      # @param services.helm.args
      args: ''
      # @param services.helm.version
      version: ''
      # @param services.helm.action
      action: ''
      # @param services.helm.repository (required)
      repository: ''
      # @param services.helm.branchName (required)
      branchName: ''
      # @param services.helm.chart
      chart:
        # @param services.helm.chart.name (required)
        name: ''
        # @param services.helm.chart.repoUrl
        repoUrl: ''
        # @param services.helm.chart.version
        version: ''
        # @param services.helm.chart.values
        values:
          # @param services.helm.chart.values[]
          - ''
        # @param services.helm.chart.valueFiles
        valueFiles:
          # @param services.helm.chart.valueFiles[]
          - ''
      # @param services.helm.grpc
      grpc: false
      # @param services.helm.disableIngressHost
      disableIngressHost: false
      # @param services.helm.overrideDefaultIpWhitelist
      overrideDefaultIpWhitelist: false
      # @param services.helm.docker
      docker:
        # @param services.helm.docker.defaultTag (required)
        defaultTag: ''
        # @param services.helm.docker.pipelineId
        pipelineId: ''
        # @param services.helm.docker.app (required)
        app:
          # @param services.helm.docker.app.afterBuildPipelineConfig
          afterBuildPipelineConfig:
            # @param services.helm.docker.app.afterBuildPipelineConfig.afterBuildPipelineId
            afterBuildPipelineId: ''
            # @param services.helm.docker.app.afterBuildPipelineConfig.detatchAfterBuildPipeline
            detatchAfterBuildPipeline: false
            # @param services.helm.docker.app.afterBuildPipelineConfig.description
            description: ''
          # @param services.helm.docker.app.dockerfilePath (required)
          dockerfilePath: ''
          # @param services.helm.docker.app.command
          command: ''
          # @param services.helm.docker.app.arguments
          arguments: ''
          # @param services.helm.docker.app.env
          env:

          # @param services.helm.docker.app.ports
          ports:
            # @param services.helm.docker.app.ports[]
            - ''
        # @param services.helm.docker.init
        init:
          # @param services.helm.docker.init.dockerfilePath (required)
          dockerfilePath: ''
          # @param services.helm.docker.init.command
          command: ''
          # @param services.helm.docker.init.arguments
          arguments: ''
          # @param services.helm.docker.init.env
          env:

        # @param services.helm.docker.ecr
        ecr: ''
        # @param services.helm.docker.builder
        builder:
          # @param services.helm.docker.builder.engine
          engine: ''
    # @param services.codefresh
    codefresh:
      # @param services.codefresh.repository (required)
      repository: ''
      # @param services.codefresh.branchName (required)
      branchName: ''
      # @param services.codefresh.env
      env:

      # @param services.codefresh.deploy
      deploy:
        # @param services.codefresh.deploy.pipelineId
        pipelineId: ''
        # @param services.codefresh.deploy.trigger
        trigger: ''
      # @param services.codefresh.destroy
      destroy:
        # @param services.codefresh.destroy.pipelineId
        pipelineId: ''
        # @param services.codefresh.destroy.trigger
        trigger: ''
      # @param services.codefresh.deployment
      deployment:
        # @param services.codefresh.deployment.helm
        helm:
          # @param services.codefresh.deployment.helm.enabled
          enabled: false
          # @param services.codefresh.deployment.helm.chartName
          chartName: ''
          # @param services.codefresh.deployment.helm.chartRepoUrl
          chartRepoUrl: ''
          # @param services.codefresh.deployment.helm.chartVersion
          chartVersion: ''
          # @param services.codefresh.deployment.helm.cmdPs
          cmdPs: ''
          # @param services.codefresh.deployment.helm.action
          action: ''
          # @param services.codefresh.deployment.helm.customValues
          customValues:
            # @param services.codefresh.deployment.helm.customValues[]
            - ''
          # @param services.codefresh.deployment.helm.customValueFiles
          customValueFiles:
            # @param services.codefresh.deployment.helm.customValueFiles[]
            - ''
          # @param services.codefresh.deployment.helm.helmVersion
          helmVersion: ''
          # @param services.codefresh.deployment.helm.attachPvc
          attachPvc:
            # @param services.codefresh.deployment.helm.attachPvc.enabled
            enabled: false
            # @param services.codefresh.deployment.helm.attachPvc.mountPath
            mountPath: ''
        # @param services.codefresh.deployment.public
        public: false
        # @param services.codefresh.deployment.capacityType
        capacityType: ''
        # @param services.codefresh.deployment.resource
        resource:
          # @param services.codefresh.deployment.resource.cpu
          cpu:
            # @param services.codefresh.deployment.resource.cpu.request
            request: ''
            # @param services.codefresh.deployment.resource.cpu.limit
            limit: ''
          # @param services.codefresh.deployment.resource.memory
          memory:
            # @param services.codefresh.deployment.resource.memory.request
            request: ''
            # @param services.codefresh.deployment.resource.memory.limit
            limit: ''
        # @param services.codefresh.deployment.readiness
        readiness:
          # @param services.codefresh.deployment.readiness.disabled
          disabled: false
          # @param services.codefresh.deployment.readiness.tcpSocketPort
          tcpSocketPort: 0
          # @param services.codefresh.deployment.readiness.httpGet
          httpGet:
            # @param services.codefresh.deployment.readiness.httpGet.path
            path: ''
            # @param services.codefresh.deployment.readiness.httpGet.port
            port: 0
          # @param services.codefresh.deployment.readiness.initialDelaySeconds
          initialDelaySeconds: 0
          # @param services.codefresh.deployment.readiness.periodSeconds
          periodSeconds: 0
          # @param services.codefresh.deployment.readiness.timeoutSeconds
          timeoutSeconds: 0
          # @param services.codefresh.deployment.readiness.successThreshold
          successThreshold: 0
          # @param services.codefresh.deployment.readiness.failureThreshold
          failureThreshold: 0
        # @param services.codefresh.deployment.scaling
        scaling:
          # @param services.codefresh.deployment.scaling.scaleToZero
          scaleToZero: false
          # @param services.codefresh.deployment.scaling.scaleToZeroMetricsCheckInterval
          scaleToZeroMetricsCheckInterval: 0
        # @param services.codefresh.deployment.hostnames
        hostnames:
          # @param services.codefresh.deployment.hostnames.host
          host: ''
          # @param services.codefresh.deployment.hostnames.acmARN
          acmARN: ''
          # @param services.codefresh.deployment.hostnames.defaultInternalHostname
          defaultInternalHostname: ''
          # @param services.codefresh.deployment.hostnames.defaultPublicUrl
          defaultPublicUrl: ''
        # @param services.codefresh.deployment.network
        network:
          # @param services.codefresh.deployment.network.ipWhitelist
          ipWhitelist:
            # @param services.codefresh.deployment.network.ipWhitelist[]
            - ''
          # @param services.codefresh.deployment.network.pathPortMapping
          pathPortMapping:

          # @param services.codefresh.deployment.network.hostPortMapping
          hostPortMapping:

          # @param services.codefresh.deployment.network.kuma
          kuma:

          # @param services.codefresh.deployment.network.grpc
          grpc:
            # @param services.codefresh.deployment.network.grpc.enable
            enable: false
            # @param services.codefresh.deployment.network.grpc.host
            host: ''
            # @param services.codefresh.deployment.network.grpc.defaultHost
            defaultHost: ''
        # @param services.codefresh.deployment.serviceDisks
        serviceDisks:
          # @param services.codefresh.deployment.serviceDisks[]
          -
            # @param services.codefresh.deployment.serviceDisks.name (required)
            name: ''
            # @param services.codefresh.deployment.serviceDisks.mountPath (required)
            mountPath: ''
            # @param services.codefresh.deployment.serviceDisks.accessModes
            accessModes: ''
            # @param services.codefresh.deployment.serviceDisks.storageSize (required)
            storageSize: ''
            # @param services.codefresh.deployment.serviceDisks.medium
            medium: ''
    # @param services.github
    github:
      # @param services.github.repository (required)
      repository: ''
      # @param services.github.branchName (required)
      branchName: ''
      # @param services.github.docker (required)
      docker:
        # @param services.github.docker.defaultTag (required)
        defaultTag: ''
        # @param services.github.docker.pipelineId
        pipelineId: ''
        # @param services.github.docker.app (required)
        app:
          # @param services.github.docker.app.afterBuildPipelineConfig
          afterBuildPipelineConfig:
            # @param services.github.docker.app.afterBuildPipelineConfig.afterBuildPipelineId
            afterBuildPipelineId: ''
            # @param services.github.docker.app.afterBuildPipelineConfig.detatchAfterBuildPipeline
            detatchAfterBuildPipeline: false
            # @param services.github.docker.app.afterBuildPipelineConfig.description
            description: ''
          # @param services.github.docker.app.dockerfilePath (required)
          dockerfilePath: ''
          # @param services.github.docker.app.command
          command: ''
          # @param services.github.docker.app.arguments
          arguments: ''
          # @param services.github.docker.app.env
          env:

          # @param services.github.docker.app.ports
          ports:
            # @param services.github.docker.app.ports[]
            - ''
        # @param services.github.docker.init
        init:
          # @param services.github.docker.init.dockerfilePath (required)
          dockerfilePath: ''
          # @param services.github.docker.init.command
          command: ''
          # @param services.github.docker.init.arguments
          arguments: ''
          # @param services.github.docker.init.env
          env:

        # @param services.github.docker.ecr
        ecr: ''
        # @param services.github.docker.builder
        builder:
          # @param services.github.docker.builder.engine
          engine: ''
      # @param services.github.deployment
      deployment:
        # @param services.github.deployment.helm
        helm:
          # @param services.github.deployment.helm.enabled
          enabled: false
          # @param services.github.deployment.helm.chartName
          chartName: ''
          # @param services.github.deployment.helm.chartRepoUrl
          chartRepoUrl: ''
          # @param services.github.deployment.helm.chartVersion
          chartVersion: ''
          # @param services.github.deployment.helm.cmdPs
          cmdPs: ''
          # @param services.github.deployment.helm.action
          action: ''
          # @param services.github.deployment.helm.customValues
          customValues:
            # @param services.github.deployment.helm.customValues[]
            - ''
          # @param services.github.deployment.helm.customValueFiles
          customValueFiles:
            # @param services.github.deployment.helm.customValueFiles[]
            - ''
          # @param services.github.deployment.helm.helmVersion
          helmVersion: ''
          # @param services.github.deployment.helm.attachPvc
          attachPvc:
            # @param services.github.deployment.helm.attachPvc.enabled
            enabled: false
            # @param services.github.deployment.helm.attachPvc.mountPath
            mountPath: ''
        # @param services.github.deployment.public
        public: false
        # @param services.github.deployment.capacityType
        capacityType: ''
        # @param services.github.deployment.resource
        resource:
          # @param services.github.deployment.resource.cpu
          cpu:
            # @param services.github.deployment.resource.cpu.request
            request: ''
            # @param services.github.deployment.resource.cpu.limit
            limit: ''
          # @param services.github.deployment.resource.memory
          memory:
            # @param services.github.deployment.resource.memory.request
            request: ''
            # @param services.github.deployment.resource.memory.limit
            limit: ''
        # @param services.github.deployment.readiness
        readiness:
          # @param services.github.deployment.readiness.disabled
          disabled: false
          # @param services.github.deployment.readiness.tcpSocketPort
          tcpSocketPort: 0
          # @param services.github.deployment.readiness.httpGet
          httpGet:
            # @param services.github.deployment.readiness.httpGet.path
            path: ''
            # @param services.github.deployment.readiness.httpGet.port
            port: 0
          # @param services.github.deployment.readiness.initialDelaySeconds
          initialDelaySeconds: 0
          # @param services.github.deployment.readiness.periodSeconds
          periodSeconds: 0
          # @param services.github.deployment.readiness.timeoutSeconds
          timeoutSeconds: 0
          # @param services.github.deployment.readiness.successThreshold
          successThreshold: 0
          # @param services.github.deployment.readiness.failureThreshold
          failureThreshold: 0
        # @param services.github.deployment.scaling
        scaling:
          # @param services.github.deployment.scaling.scaleToZero
          scaleToZero: false
          # @param services.github.deployment.scaling.scaleToZeroMetricsCheckInterval
          scaleToZeroMetricsCheckInterval: 0
        # @param services.github.deployment.hostnames
        hostnames:
          # @param services.github.deployment.hostnames.host
          host: ''
          # @param services.github.deployment.hostnames.acmARN
          acmARN: ''
          # @param services.github.deployment.hostnames.defaultInternalHostname
          defaultInternalHostname: ''
          # @param services.github.deployment.hostnames.defaultPublicUrl
          defaultPublicUrl: ''
        # @param services.github.deployment.network
        network:
          # @param services.github.deployment.network.ipWhitelist
          ipWhitelist:
            # @param services.github.deployment.network.ipWhitelist[]
            - ''
          # @param services.github.deployment.network.pathPortMapping
          pathPortMapping:

          # @param services.github.deployment.network.hostPortMapping
          hostPortMapping:

          # @param services.github.deployment.network.kuma
          kuma:

          # @param services.github.deployment.network.grpc
          grpc:
            # @param services.github.deployment.network.grpc.enable
            enable: false
            # @param services.github.deployment.network.grpc.host
            host: ''
            # @param services.github.deployment.network.grpc.defaultHost
            defaultHost: ''
        # @param services.github.deployment.serviceDisks
        serviceDisks:
          # @param services.github.deployment.serviceDisks[]
          -
            # @param services.github.deployment.serviceDisks.name (required)
            name: ''
            # @param services.github.deployment.serviceDisks.mountPath (required)
            mountPath: ''
            # @param services.github.deployment.serviceDisks.accessModes
            accessModes: ''
            # @param services.github.deployment.serviceDisks.storageSize (required)
            storageSize: ''
            # @param services.github.deployment.serviceDisks.medium
            medium: ''
    # @param services.docker
    docker:
      # @param services.docker.dockerImage (required)
      dockerImage: ''
      # @param services.docker.defaultTag (required)
      defaultTag: ''
      # @param services.docker.command
      command: ''
      # @param services.docker.arguments
      arguments: ''
      # @param services.docker.env
      env:

      # @param services.docker.ports
      ports:
        # @param services.docker.ports[]
        - ''
      # @param services.docker.deployment
      deployment:
        # @param services.docker.deployment.helm
        helm:
          # @param services.docker.deployment.helm.enabled
          enabled: false
          # @param services.docker.deployment.helm.chartName
          chartName: ''
          # @param services.docker.deployment.helm.chartRepoUrl
          chartRepoUrl: ''
          # @param services.docker.deployment.helm.chartVersion
          chartVersion: ''
          # @param services.docker.deployment.helm.cmdPs
          cmdPs: ''
          # @param services.docker.deployment.helm.action
          action: ''
          # @param services.docker.deployment.helm.customValues
          customValues:
            # @param services.docker.deployment.helm.customValues[]
            - ''
          # @param services.docker.deployment.helm.customValueFiles
          customValueFiles:
            # @param services.docker.deployment.helm.customValueFiles[]
            - ''
          # @param services.docker.deployment.helm.helmVersion
          helmVersion: ''
          # @param services.docker.deployment.helm.attachPvc
          attachPvc:
            # @param services.docker.deployment.helm.attachPvc.enabled
            enabled: false
            # @param services.docker.deployment.helm.attachPvc.mountPath
            mountPath: ''
        # @param services.docker.deployment.public
        public: false
        # @param services.docker.deployment.capacityType
        capacityType: ''
        # @param services.docker.deployment.resource
        resource:
          # @param services.docker.deployment.resource.cpu
          cpu:
            # @param services.docker.deployment.resource.cpu.request
            request: ''
            # @param services.docker.deployment.resource.cpu.limit
            limit: ''
          # @param services.docker.deployment.resource.memory
          memory:
            # @param services.docker.deployment.resource.memory.request
            request: ''
            # @param services.docker.deployment.resource.memory.limit
            limit: ''
        # @param services.docker.deployment.readiness
        readiness:
          # @param services.docker.deployment.readiness.disabled
          disabled: false
          # @param services.docker.deployment.readiness.tcpSocketPort
          tcpSocketPort: 0
          # @param services.docker.deployment.readiness.httpGet
          httpGet:
            # @param services.docker.deployment.readiness.httpGet.path
            path: ''
            # @param services.docker.deployment.readiness.httpGet.port
            port: 0
          # @param services.docker.deployment.readiness.initialDelaySeconds
          initialDelaySeconds: 0
          # @param services.docker.deployment.readiness.periodSeconds
          periodSeconds: 0
          # @param services.docker.deployment.readiness.timeoutSeconds
          timeoutSeconds: 0
          # @param services.docker.deployment.readiness.successThreshold
          successThreshold: 0
          # @param services.docker.deployment.readiness.failureThreshold
          failureThreshold: 0
        # @param services.docker.deployment.scaling
        scaling:
          # @param services.docker.deployment.scaling.scaleToZero
          scaleToZero: false
          # @param services.docker.deployment.scaling.scaleToZeroMetricsCheckInterval
          scaleToZeroMetricsCheckInterval: 0
        # @param services.docker.deployment.hostnames
        hostnames:
          # @param services.docker.deployment.hostnames.host
          host: ''
          # @param services.docker.deployment.hostnames.acmARN
          acmARN: ''
          # @param services.docker.deployment.hostnames.defaultInternalHostname
          defaultInternalHostname: ''
          # @param services.docker.deployment.hostnames.defaultPublicUrl
          defaultPublicUrl: ''
        # @param services.docker.deployment.network
        network:
          # @param services.docker.deployment.network.ipWhitelist
          ipWhitelist:
            # @param services.docker.deployment.network.ipWhitelist[]
            - ''
          # @param services.docker.deployment.network.pathPortMapping
          pathPortMapping:

          # @param services.docker.deployment.network.hostPortMapping
          hostPortMapping:

          # @param services.docker.deployment.network.kuma
          kuma:

          # @param services.docker.deployment.network.grpc
          grpc:
            # @param services.docker.deployment.network.grpc.enable
            enable: false
            # @param services.docker.deployment.network.grpc.host
            host: ''
            # @param services.docker.deployment.network.grpc.defaultHost
            defaultHost: ''
        # @param services.docker.deployment.serviceDisks
        serviceDisks:
          # @param services.docker.deployment.serviceDisks[]
          -
            # @param services.docker.deployment.serviceDisks.name (required)
            name: ''
            # @param services.docker.deployment.serviceDisks.mountPath (required)
            mountPath: ''
            # @param services.docker.deployment.serviceDisks.accessModes
            accessModes: ''
            # @param services.docker.deployment.serviceDisks.storageSize (required)
            storageSize: ''
            # @param services.docker.deployment.serviceDisks.medium
            medium: ''
    # @param services.externalHttp
    externalHttp:
      # @param services.externalHttp.defaultInternalHostname (required)
      defaultInternalHostname: ''
      # @param services.externalHttp.defaultPublicUrl (required)
      defaultPublicUrl: ''
    # @param services.auroraRestore
    auroraRestore:
      # @param services.auroraRestore.command (required)
      command: ''
      # @param services.auroraRestore.arguments (required)
      arguments: ''
    # @param services.configuration
    configuration:
      # @param services.configuration.defaultTag (required)
      defaultTag: ''
      # @param services.configuration.branchName (required)
      branchName: ''
    # @param services.deploymentDependsOn
    deploymentDependsOn:
      # @param services.deploymentDependsOn[]
      - ''
    # @param services.kedaScaleToZero
    kedaScaleToZero:
      # @param services.kedaScaleToZero.type
      type: ''
      # @param services.kedaScaleToZero.replicas
      replicas:
        # @param services.kedaScaleToZero.replicas.min
        min: 0
        # @param services.kedaScaleToZero.replicas.max
        max: 0
      # @param services.kedaScaleToZero.scaledownPeriod
      scaledownPeriod: 0
      # @param services.kedaScaleToZero.maxRetries
      maxRetries: 0
      # @param services.kedaScaleToZero.scalingMetric
      scalingMetric:
        # @param services.kedaScaleToZero.scalingMetric.requestRate
        requestRate:
          # @param services.kedaScaleToZero.scalingMetric.requestRate.granularity
          granularity: ''
          # @param services.kedaScaleToZero.scalingMetric.requestRate.targetValue
          targetValue: 0
          # @param services.kedaScaleToZero.scalingMetric.requestRate.window
          window: ''
        # @param services.kedaScaleToZero.scalingMetric.concurrency
        concurrency:
          # @param services.kedaScaleToZero.scalingMetric.concurrency.targetValue
          targetValue: 0